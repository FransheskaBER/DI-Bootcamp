ENTITY RELATIONSHIP DIAGRAM (ER)
It's a pic that shows how tables are connected to each other.
Think of it like a family tree
The entity is the table itself.
The attributes are the columns or labels of the table.
The relationship is how the foreign keys (how two entities are connected).


OBJECT RELATIONAL MAPPER (ORM)
A tool that lets you use python or java instead of raw SQL queries.
Objects = tables
Attributes = Columns
Instances = Rows
Methods = Queries (instead of SELECT, you call a method like .function_name()

Example:

users = session.query(User).filter(User.age > 18).all()

User is a Python class mapped to the users table.
session.query(User) means “look inside the users table.”
.filter(User.age > 18) means “WHERE age > 18.”
.all() means “get all rows.”



TRANSACTIONS
A transaction is when you create, update or delete a record (row) rom a table.
A transaction is a group of one or more SQL operations that it is treated as a single unit of work, meaning either all steps happen or none of them happen.
Example, if you want to transfer money between 2 account, you have step 1 is to subtract money from account 2 and step 2 is add that money to account 2, if step 1 fails so step 2.

Standard properties of a transaction (ACID) are the GUARANTEES of a transaction:

Atomicity > all or nothing
Consistency > all = TRUE
isolation > one by one even if they run at the same time
Durability > permanent change


MULTIVERSION CURRENCY CONTROL (MVCC)
Let's people read and write the database at the same time by creating multiple versions of that database for each person so no one is blocked from doing a specific action.
Everyone can work in parallel


DATA INTEGRITY
Entity Integrity > No duplicates rows
Domain Integrity > Enforce valid entries in a column by restricting the type, format, range of values.
Referential Integrity > Cannot delete rows which are used by other records (rows)
User-defined Integrity > Enforce unique business rules apart from the integrities above.


DATA NORMALIZATION
It is a process to organize data in a way that we won't have the same stored data or records(rows) in different tables. 


